

@model AIA.Life.Models.UWRules.UWRule

@using GridMvc.Html
@using AIA.Presentation.Helpers

@Html.Grid(Model.LstRuleSet).Named("GridRuleSetInfo").Columns(columns =>
{

columns.Add(a => a.RuleSetName).Titled("Rule Name").Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(a => Html.TextBox("RuleSetName", a.RuleSetName, new { @class = "form-control", @style = "width:100%", @readonly = "readonly" }));
columns.Add(a => a.Description).Titled("Description").Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(a => Html.TextBox("Description", a.Description, new { @class = "form-control", @style = "width:100%", @readonly = "readonly" }));
columns.Add(a => a.EffectiveDate, true).Titled("ParameterID").Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(a => @Html.iNubeDatePickerForGrid("" + a.EffectiveDate, "EffectiveDate", new { @class = "form-control", @readonly = "readonly" }).ToHtmlString());
columns.Add(a => a.Action).Titled("Action").Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(a => Html.TextBox("Action", a.Action, new { @class = "form-control", @style = "width:100%", @readonly = "readonly" }));
columns.Add().Titled("View").Encoded(false).Sanitized(false).SetWidth(30)
.RenderValueAs(o => @<input type="button" name="View" value="View" class="btn btn-default "  onclick="ViewRuleSet(@o.RuleSetID)" />);
columns.Add().Titled("Delete").Encoded(false).Sanitized(false).Css("text-center").SetWidth("10%").RenderValueAs(o => @<text>
        <input type="button" id="btnDeleteNomineeGridRow" value="Delete" class="btn btn-default form-control" onclick="DeleteParameterRow(this); DeleteRow(@o.RuleSetID);" /></text>);
}).Selectable(true)



<script type="text/javascript">

 
    function DeleteParameterRow(event) {
      
        $('#' + event.id).remove();
    }
    


    
</script>
