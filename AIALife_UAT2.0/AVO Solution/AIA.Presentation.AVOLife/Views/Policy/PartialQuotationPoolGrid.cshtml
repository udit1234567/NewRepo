@*@model AIA.Life.Models.Opportunity.LifeQuote*@
@model Grid.Mvc.Ajax.GridExtensions.AjaxGrid<AIA.Life.Models.Opportunity.QuotionPool>
@using GridMvc.Html
@Html.Grid(Model).Named("GridQuotationPoolDetails").Columns(columns =>
{
    columns.Add(a => a.QuotationId).Titled("").Encoded(false).Sanitized(false).RenderValueAs(a => Html.RadioButton("QuotationId",AIA.CrossCutting.CrossCutting_EncryptDecrypt.Encrypt(a.QuotationId.ToString()), new { @id = "rdnQuotationId" + a.QuotationId, @onclick = "SetQuoteNo('" + AIA.CrossCutting.CrossCutting_EncryptDecrypt.Encrypt(a.QuotationNo) + "','"+ AIA.CrossCutting.CrossCutting_EncryptDecrypt.Encrypt(a.ProductCode) + "','"+ AIA.CrossCutting.CrossCutting_EncryptDecrypt.Encrypt(a.PreferredLanguauge)+"')", @class = "form-control numeric", Style = "height:14px;width:14px" }));
    columns.Add(a => a.QuotaionType).Titled("Type").Encoded(false).Sanitized(false).Filterable(true);
    columns.Add(a => a.QuotationNo).Titled("Quote No").Encoded(false).Sanitized(false).Filterable(true);
    columns.Add(a => a.FullName).Titled("Proposer Name").Encoded(false).Sanitized(false).Filterable(true);
    //columns.Add(a => a.Salutation).Titled("Salutation").Encoded(false).Sanitized(false).Filterable(true);
    //columns.Add(a => a.Name).Titled("Given Name").Encoded(false).Sanitized(false).Filterable(true);
    //columns.Add(a => a.SurName).Titled("Surname").Encoded(false).Sanitized(false).Filterable(true);
    columns.Add(a => a.NicNo).Titled("NIC").Encoded(false).Sanitized(false).Filterable(true);
    //columns.Add(a => a.Mobile).Titled("Mobile").Encoded(false).Sanitized(false).SetWidth("10%").Filterable(true);
    columns.Add(a => a.QuotationCreationDate).Titled("Quotation Creation Date").Encoded(false).Sanitized(false).Filterable(true);
    columns.Add(a => a.LeadNo).Titled("Lead No").Encoded(false).Sanitized(false).Filterable(true);
    columns.Add(a => a.BancaFPC,true).Titled("Banca Introducer Code").Encoded(false).Sanitized(false).Filterable(true);
    //columns.Add(a => a.Plancode).Titled("").Encoded(false).Sanitized(false).SetWidth("5%").RenderValueAs(a => Html.Hidden("Plancode", a.Plancode, new { @class = "form-control Plancode" }));
    columns.Add(a => a.ProductCode,true).Titled("").Encoded(false).Sanitized(false).RenderValueAs(a => Html.Hidden("ProductCode", a.ProductCode, new { @class = "form-control ProductCode" }));
    columns.Add(a => a.PreferredLanguauge,true).Titled("").Encoded(false).Sanitized(false).RenderValueAs(a => Html.Hidden("PreferredLanguauge", a.PreferredLanguauge, new { @class = "form-control PreferredLanguauge" }));
    //columns.Add(a => a.Email).Titled("Email").Encoded(false).Sanitized(false).SetWidth("8%").Filterable(true);
    //columns.Add(a => a.Daysleft).Titled("Days Left").Encoded(false).Sanitized(false).SetWidth("8%").Filterable(true);
}).WithPaging(5).WithMultipleFilters()
<link href="~/Content/ladda-bootstrap/ladda-themeless.min.css" rel="stylesheet" />
@Scripts.Render("~/bundles/GridMVC") 
<style>
    .panel-default {
        /*border-color: #eee !important;*/
        margin-bottom: 5px;
    }

    .panel {
        /*background-color: #B8123E !important;*/
    }

    @@media screen and (min-width:320px) and (max-width:768px) {
        .no-more-tables table, thead, tbody, th, td, tr {
            float: none;
        }
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
       // debugger
        $(".grid-mvc").gridmvc().pageGrids;
        if ('@TempData["Load"]' == "FirstTime") {
            $.ajaxSetup({
                cache: false
            });
            pageGrids.GridQuotationPoolDetails.ajaxify({
                getData: '../Policy/SearchQuotationPoolDetails',
                getPagedData: '../Policy/SearchQuotationPoolDetails',
            });
        }
    });
</script>