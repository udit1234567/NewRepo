@model Grid.Mvc.Ajax.GridExtensions.AjaxGrid<AIA.Life.Models.Allocation.AllocationProposals>
@using GridMvc.Html
@using AIAResources;
@{
    int PageSize = 5; // Set Page Size
    int CurrentPage = ViewBag.AllocationCurrentPage;
    int FirstIndex = 0;
    if (ViewBag.AllocationCurrentPage == 1)
    { FirstIndex = 0; }
    else
    {
        FirstIndex = PageSize * (CurrentPage - 1);
    }
}

@Html.Grid(Model).Named("GridAllocateProposals").Columns(columns =>
{
    columns.Add(a => a.ISSelected).Titled("Select").Encoded(false).SetWidth(1).Sanitized(false).Filterable(false).RenderValueAs(a => Html.CheckBox("objLstAllocationProposals[" + (a.Index - FirstIndex) + "].IsSelected", a.ISSelected, new { @id = "AllocatechkIsSelected" + (a.Index - FirstIndex), Style = "height:14px;width:14px", @onchange = "FunctionDropDown('checkbox','"+a.ProposalNo+ "','" + (a.Index - FirstIndex) + "')" }));
    columns.Add(a => a.ProposalNoDisplay).Titled("ProposalNo").Encoded(false).Sanitized(false).Filterable(true);
    columns.Add(a => a.ProposalNo, true).Titled("ProposalNoHidden").Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(a => Html.TextBox("objLstAllocationProposals[" + (a.Index - FirstIndex) + "].ProposalNo", a.ProposalNo, new { @id = "txtProposalNo" + (a.Index - FirstIndex), @class = "form-control", @style = "width:100%" }));
    columns.Add(a => a.AssignTo).Titled("Assign").Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(a => Html.DropDownList("objLstAllocationProposals[" + (a.Index - FirstIndex) + "].AssignTo", new SelectList(ViewBag.AllocateUWDetails, "Value", "Text", a.AssignTo), "Select", new { @id = "DDLAssignTo" + (a.Index - FirstIndex), @class = "form-control", @style = "width:100%", @onchange = "FunctionDropDown('Dropdown','" + a.ProposalNo + "','"+(a.Index- FirstIndex) + "')" }));
}).WithPaging(PageSize).WithMultipleFilters()






<script type="text/javascript">

    $(document).ready(function () {

        $(".grid-mvc").gridmvc().pageGrids;
        if ('@TempData["Load"]' == "FirstTime") {
            $.ajaxSetup({
                cache: false
            });
            pageGrids.GridAllocateProposals.ajaxify({
                getData: '../Allocation/LoadNxtPageForManualAllocation',
                getPagedData: '../Allocation/LoadNxtPageForManualAllocation',
            });
        }

    });

function FunctionDropDown(Type, index,id)
{
    debugger;
    var str = index;
    var selectedvalue = '';
   // alert(index);
    var a = $('#DDLAssignTo' + id + ' :selected').text();
        //alert(a);
   
    if ($("#AllocatechkIsSelected" + id).is(':checked'))
    {
        if (a != "Select")
        {
            selectedvalue = index + "-" + a;
            var res = selectedvalue.split('-')
            for (var i = 0; i < Selected.length ; i++) {
                if (Selected[i].includes(res[0])) {
                    Selected.splice(i, 1);
                }
            }
            Selected.push(selectedvalue);
        }
           
    }
    else
    {
        selectedvalue = index + "-" + a;
        for (var i = 0; i < Selected.length; i++) {
            if (Selected[i] == selectedvalue) {
                Selected.splice(i, 1);
            }
        }
    }
    
}
</script>

<style>
    .panel-default {
        border-color: #eee !important;
        margin-bottom: 5px;
    }

    /*.panel {
        background-color: #1747a7 !important;
    }*/

    @@media screen and (min-width:320px) and (max-width:768px) {
        .no-more-tables table, thead, tbody, th, td, tr {
            float: none;
        }
    }
</style>