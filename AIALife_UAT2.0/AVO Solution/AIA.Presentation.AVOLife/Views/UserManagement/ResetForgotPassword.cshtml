@model AIA.Life.Models.UserManagement.ChangePassword
@using CaptchaMvc.HtmlHelpers
@{
    string isFirstTime = Convert.ToString(ViewBag.IsFirstTimeLogin);
}

@using (Ajax.BeginForm("", "", new AjaxOptions
    {
        HttpMethod = "Post",

    }, new { @id = "ChangePassword", @class = "form-group", autocomplete = "off" }))
{
    @Html.HiddenFor(a => a.userName, new { @Value = Model.userName, @id = "hdnUserName" })
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-target="#collapse1" href="#collapseone" class="collapsed">
                    Change Password
                </a>
            </h4>
        </div>
        <div id="collapse1" class="panel-collapse in">
            <div class="panel-body">
                @*  <div class="col-lg-12 col-sm-12 form-group">
                        <div class="col-lg-4 col-sm-6">
                            <label class="col-lg-5 col-sm-5  control-label  text-right">Secret Question<span class="mandatory"> *</span></label>
                            <div class="col-lg-7 col-sm-7">
                                @Html.DropDownListFor(a => a.hintQuetn, new SelectList(Model.secretQuestions, "ID", "Value"), "Select Secret Question", new { @id = "ddlSecretQstn", @class = "form-control", @onblur = "validateDropDown('ddlSecretQstn','Please Select Secret Question')" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12 col-sm-12 form-group">
                        <div class="col-lg-4 col-sm-6">
                            <label class="col-lg-5 col-sm-5  control-label  text-right">Answer<span class="mandatory"> *</span></label>
                            <div class="col-lg-7 col-sm-7">
                                @Html.TextBoxFor(a => a.hintAns, new { @id = "txtSecretAns", @class = "form-control", @onblur = "validateTextBox('txtSecretAns','please provide Secret Answer')", @maxlength = "100" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12 col-sm-12 form-group">
                        <div class="col-lg-4 col-sm-6">
                            <label class="col-lg-5 col-sm-5  control-label  text-right">Old Password<span class="mandatory"> *</span></label>
                            <div class="col-lg-7 col-sm-7">
                                @(Html.PasswordFor(a => a.oldPassword, new { @class = "form-control", @id = "txtOldPassword" }))
                            </div>
                        </div>
                    </div>*@
                <div class="col-lg-12 col-sm-12 form-group">
                    <div class="col-lg-4 col-sm-6">
                        <label class="col-lg-5 col-sm-5  control-label  text-right">New Password<span class="mandatory"> *</span></label>
                        <div class="col-lg-7 col-sm-7">
                            @(Html.PasswordFor(a => a.newPassword, new { @class = "form-control", @id = "txtNewPassword" }))
                        </div>
                    </div>
                    <div class="col-lg-4 col-sm-6">
                        <label class="col-lg-12 col-sm-6  control-label  text-right"><b>Rules:</b>&nbsp;New password minimum length should be 8 characters & contain at least 1 alphabet,1 number and 1 special character.</label>
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12 form-group">
                    <div class="col-lg-4 col-sm-6">
                        <label class="col-lg-5 col-sm-5  control-label  text-right">Confirm New Password<span class="mandatory"> *</span></label>
                        <div class="col-lg-7 col-sm-7">
                            @(Html.PasswordFor(a => a.confirmNewPassword, new { @class = "form-control", @id = "txtConfirmNewPassword" }))
                        </div>
                    </div>
                </div>

                @*<div class="col-lg-12 col-sm-12 form-group">
                    <div class="col-lg-4 col-sm-6">
                        <label class="col-lg-5 col-sm-5  control-label text-right">Hint Answer</label>
                        <div class="col-lg-7 col-sm-7">
                           @(Html.TextBoxFor(a => a.hintAns, new { @class = "form-control", @id = "txthintans" }))
                        </div>
                    </div>
                        </div> *@
                @* <div class="col-lg-12 col-sm-12 form-group">
                        <div class="col-lg-4 col-sm-6">
                            <label class="col-lg-5 col-sm-5  control-label  text-right">Captcha<span class="mandatory"> *</span></label>
                            <div class="col-lg-7 col-sm-7">

                                @(Html.Captcha("Refresh", "Captcha Letters are Case Sensitive", 5, "Is required field.", false))
                            </div>
                        </div>
                    </div>*@

                <div class="col-lg-2 col-sm-2"></div>
                <input type="button" id="btnsubmit" value="Submit" class="btn btn-default" onclick="ChangePassword()" />


            </div>
        </div>
    </div>
}

<div id="changePassModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Confirmation</h4>
            </div>
            <div class="modal-body" id="changePassModelBody">
                Password successfully changed. Please click OK to log in using new credentials.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="javascript:window.location.href = '../../Account/LogOff'">OK</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function ChangePassword() {

        var result = false;
        var Newpassword = $("#txtNewPassword").val();
        var Confirmpassword = $("#txtConfirmNewPassword").val();
        if (Newpassword == Confirmpassword) {
            writeMultipleMessage("error", "", "txtNewPassword");
            //new password must contain atleast 1 alphabet,1 number and 1 special charecter
            var strongPassWord = ValidateNewPassword(Newpassword);
            if (strongPassWord == "true") {
                var ChangePassData = {
                    userName: $("#hdnUserName").val(),
                    newPassword: $("#txtNewPassword").val()
                };
                $.ajax({

                    type: "POST",
                    url: '@Url.Action("ResetForgotPasswordDetails", "UserManagement")',
                    data: JSON.stringify(ChangePassData),
                    contentType: "application/json; charset=utf-8",                 

                    success: function (retData) {                        
                        if (retData == "True") {
                            $("#changePassModal").modal('show');
                        }
                        else {
                            writeMultipleMessage("error", "" + retData, "txtNewPassword");
                        }
                    },

                    error: function (xhr, tStatus, err) {

                    }

                });
            }
            else {
                writeMultipleMessage("error", strongPassWord, "txtNewPassword");
                return;
            }
        }

        else {
            writeMultipleMessage("error", "New Password and Confirm Password not match", "txtNewPassword");
            return;
        }
    }
</script>
<script type="text/javascript">
    //$(document).ready(function () {
    //    $("#DivPageLeftMenu").hide();
    //});

</script>
@if (isFirstTime == "True")
{
    <style>
        .navbar-collapse.collapse {
            display: none !important;
        }
    </style>
}