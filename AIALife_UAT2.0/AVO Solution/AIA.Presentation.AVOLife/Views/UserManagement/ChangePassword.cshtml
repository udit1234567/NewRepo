@model AIA.Life.Models.UserManagement.ChangePassword
@using CaptchaMvc.HtmlHelpers
@using reCAPTCHA.MVC
@{
    string isFirstTime = Convert.ToString(ViewBag.IsFirstTimeLogin);
    string CaptchaError = Convert.ToString(Model.IsCaptchaError);
}
@*<script type="text/javascript" src='https://www.google.com/recaptcha/api.js' async defer></script>*@
@using (Ajax.BeginForm("", "", new AjaxOptions
    {
        HttpMethod = "Post",

    }, new { @id = "ChangePassword", @class = "form-group", autocomplete = "off", OnBegin = "onBeginSubmit" }))
{
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-target="#collapse1" href="#collapseone" class="collapsed">
                    Change Password
                </a>
            </h4>
        </div>
        <div id="collapse1" class="panel-collapse in">
            <div class="panel-body">
                <div class="col-md-12 col-sm-12 col-xs-12 col-lg-12">
                    <div class="col-md-4 col-sm-4 col-xs-12 col-lg-4">
                        <div class="form-group">
                            <label>Current Password<span class="mandatory"> *</span></label>
                            @(Html.PasswordFor(a => a.oldPassword, new { @class = "form-control", @id = "txtOldPassword" }))
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12 col-lg-4">
                        <div class="form-group">
                            <label>New Password<span class="mandatory"> *</span></label>
                            @(Html.PasswordFor(a => a.newPassword, new { @class = "form-control", @id = "txtNewPassword" }))
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12 col-lg-4">
                        <div class="form-group">
                            <label>Confirm New Password<span class="mandatory"> *</span></label>                            
                                @(Html.PasswordFor(a => a.confirmNewPassword, new { @class = "form-control", @id = "txtConfirmNewPassword" }))        
                            </div>
                        </div>
                    </div>
                <div class="col-md-12 col-sm-12 col-xs-12 col-lg-12" id="divIsSecurityCheckeds">
                    <form>
                        <div id="">
                            <label>                                
                                @Html.CheckBoxFor(a => a.IsSecurityChecked,new { @id = "chkIsSecurityCheckeds", @style = "margin-right: 10px;", @onclick = "ShowSecurityQuestion()" })Change Security Questions
                            </label>
                        </div>
                    </form>
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12 col-lg-12" style="display:none" id="divSecurityQuestions">
                        <br />
                        <h4><b>Set Security Questions</b></h4>
                        <br />
                        <div class="col-md-4 col-sm-4 col-xs-12 col-lg-4">
                            <div class="form-group">
                                <label>Secret Question<span class="mandatory"> *</span></label>
                                @Html.DropDownListFor(a => a.hintQuetn, new SelectList(Model.secretQuestions, "ID", "Value"), "Select Secret Question", new { @id = "ddlSecretQstn", @class = "form-control", @onblur = "validateDropDown('ddlSecretQstn','Please Select Secret Question')" })
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12 col-lg-4">
                            <div class="form-group">
                                <label>Answer<span class="mandatory"> *</span></label>
                                @Html.TextBoxFor(a => a.hintAns, new { @id = "txtSecretAns", @class = "form-control", @onblur = "validateTextBox('txtSecretAns','please provide Secret Answer')", @maxlength = "100" })
                            </div>
                        </div>
                    </div>
                    @*<div class="col-lg-12 col-sm-12 form-group">
            <div class="col-lg-4 col-sm-6">
                <label class="col-lg-5 col-sm-5  control-label text-right">Hint Answer</label>
                <div class="col-lg-7 col-sm-7">
                   @(Html.TextBoxFor(a => a.hintAns, new { @class = "form-control", @id = "txthintans" }))
                </div>
            </div>
                </div> *@
                    <div class="col-md-12 col-sm-12  col-lg-12 form-group" style="text-align: center;margin-top:30px;display:block">
                        @*<label>Captcha<span class="mandatory"> *</span></label>*@
                        <div class="g-recaptcha" data-sitekey=@System.Configuration.ConfigurationManager.AppSettings["ReCaptchaPublicKey"] style="text-align: center;margin-left:400px;display:block"> </div>
                            @*<div>*@
                            @*@Html.Recaptcha(publicKey: "6lc1meeuaaaaadlox9lxwzwvpjpyjxp1_1lha4wu", theme: CaptchaTheme.Light, type: CaptchaType.Image,
            callback: "verifycallback", expiredCallback: "expiredcallback")*@
                       
                            @*@html.recaptcha()*@
                                                     
                            
                        @*</div>*@  
                        @Html.ValidationMessage("ReCaptcha")   
                        @*@(Html.Captcha("Refresh", "Captcha Letters are Case Sensitive", 5, "Is required field.", false))*@
                    </div>
                    <div class="col-md-12 col-sm-12  col-lg-12 form-group" style="text-align: center;margin-top:30px;display:block">
                        <input type="button" id="btnChangesubmit" value="Submit" class="btn btn-default" onclick="ChangePassword()" />
                    </div>

                </div>
                </div>
    </div>
}

<div id="changePassModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Confirmation</h4>
            </div>
            <div class="modal-body" id="changePassModelBody">
                Password successfully changed. Please click OK to log in using new credentials.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="javascript:window.location.href = '../../Account/LogOff'">OK</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function ChangePassword() {        
        var result = false;
        var v = grecaptcha.getResponse();
        if (v.length == 0) {
            writeMultipleMessage("error", "reCaptcha is Required","grecaptcha")
            return false;
        }
        $("#chkIsSecurityCheckeds").attr("disabled", false);
        if ($("#chkIsSecurityCheckeds").is(":checked")) {
            result = validateDropDown('ddlSecretQstn', 'Please Select Secret Question ');
            if (!result) {
                return false;
            }
            result = validateTextBox('txtSecretAns', 'please provide Secret Answer');
            if (!result) {
                return false;
            }
        }
        if ($("#txtOldPassword").val() != "" && $("#txtOldPassword").val() != null && $("#txtOldPassword").val() != undefined) {
            writeMultipleMessage("error", "", "txtOldPassword");
        } else {
            writeMultipleMessage("error", "Please Enter Existing password", "txtOldPassword");
            return;
        }
        if ($("#CaptchaInputText").val() == "" && $("#CaptchaInputText").val() != null && $("#CaptchaInputText").val() != undefined) {
            writeMultipleMessage("error", 'please provide Captcha', "CaptchaInputText");
            result = false;
            return false;
        }
        else {

            writeMultipleMessage("error", '', "CaptchaInputText");
            result = true;
        }
        var OldPassword = $("#txtOldPassword").val();
        var Newpassword = $("#txtNewPassword").val();
        var Confirmpassword = $("#txtConfirmNewPassword").val();
        if (Newpassword == OldPassword)
        {
            writeMultipleMessage("error", "Old Password and New Password should not same", "txtNewPassword");
            return;
        }
        if (Newpassword == Confirmpassword) {
            writeMultipleMessage("error", "", "txtNewPassword");
            //new password must contain atleast 1 alphabet,1 number and 1 special charecter
            var strongPassWord = ValidateNewPassword(Newpassword);
            if (strongPassWord == "true") {
                var ChangePassData = {
                    oldPassword: $("#txtOldPassword").val(), newPassword: $("#txtNewPassword").val(), PasswordQuestion1: $("#ddlQues1").val(), IsSecurityChecked: $("#chkIsSecurityCheckeds").is(":checked"),
                    Answer1: $("#txtAns1").val(), PasswordQuestion2: $("#ddlQues2").val(), Answer2: $("#txtAns2").val(), hintQuetn: $("#ddlSecretQstn option:selected").val(), hintAns: $("#txtSecretAns").val()
                };
                //$.post('../../UserManagement/ResetPassword', $("#ChangePassData").serialize()).done(function (data) {
                //    if (retData == "Success") {
                //        $("#changePassModal").modal('show');
                //        //window.location.href = "../../Home/LogOut";
                //    }
                //    else {
                //        writeMultipleMessage("error", "" + retData, "txtOldPassword");
                //    }
                //}).fail(function (data) {
                //    $('#userModelBody').html(data);
                //    $("#userModal").modal('show');
                //    $('#txtuserID').prop('disabled', true);
                //    $('#txtReportusrId').prop('disabled', true);
                //    //$('#btnok').hide();
                //});
                $.ajax({

                    type: "POST",
                    url: '@Url.Action("ResetPassword", "UserManagement")',
                    data: JSON.stringify(ChangePassData),
                    contentType: "application/json; charset=utf-8",

                    success: function (retData) {
                        if (retData == "Success") {
                            $("#changePassModal").modal('show');
                        }
                        else {
                            writeMultipleMessage("error", "" + retData, "txtOldPassword");
                        }
                    },

                    error: function (xhr, tStatus, err) {

                    }

                });
            }
            else {
                writeMultipleMessage("error", strongPassWord, "txtNewPassword");
                return;
            }
        }

        else {
            writeMultipleMessage("error", "New Password and Confirm Password not match", "txtNewPassword");
            return;
        }
    }
    function ShowSecurityQuestion()
    {

        if ($("#chkIsSecurityCheckeds").is(":checked")) {
            $("#divSecurityQuestions").show();
        }
        else {
            $("#divSecurityQuestions").hide();
        }
    }   
var verifyCallback = function (response) {
    alert("grecaptcha is ready!");
};

var expiredCallback = function () {
    alert("grecaptcha is expired!");
    };
    var onBeginSubmit = function () {
        
    };
</script>
<script type="text/javascript">
    $(document).ready(function () {
        if ('@CaptchaError' == "True") {
            ChangePassword();
            writeMultipleMessage("error", 'please Input correct Captcha', "CaptchaInputText");
        }
        if ('@Model.IsSecurityChecked' == "True") {
                ShowSecurityQuestion();
                $("#divIsSecurityCheckeds").hide();
                $("#chkIsSecurityCheckeds").prop("checked", true);
            }
            else {
                $("#divIsSecurityCheckeds").show();
                $("#chkIsSecurityCheckeds").attr("disabled", false);
            }
            //$("#DivPageLeftMenu").hide();
        });

</script>
@if (isFirstTime == "True")
{
    <style>
        .navbar-collapse.collapse {
            display: none !important;
        }
    </style>
}